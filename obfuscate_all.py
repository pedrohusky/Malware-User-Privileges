import os
import shutil

from tools.obfuscate import obfuscate_file


class ObfuscationManager:
    def __init__(self):
        self.script_dir = os.path.dirname(os.path.realpath(__file__))
        self.obfuscated_dir = os.path.join(self.script_dir, "obfuscated")
        if os.path.exists(self.obfuscated_dir):
            shutil.rmtree(self.obfuscated_dir)
        self.ignore_names = ["venv", "targets", 'obfuscated', '.git', '.idea', '__pycache__']
        self.do_not_modify_files = ["obfuscate_all.py", "generate_exe.py", 'obfuscate.py', 'master_server.py']

    def should_ignore(self, name):
        return any(ignore_name in name for ignore_name in self.ignore_names)

    def should_not_modify(self, name):
        return any(name == filename for filename in self.do_not_modify_files)

    def obfuscate_files(self, dir_path):
        for item in os.listdir(dir_path):
            item_path = os.path.join(dir_path, item)

            if os.path.isdir(item_path):
                if not self.should_ignore(item):
                    self.obfuscate_files(item_path)
            elif item_path.endswith(".py") and "obfuscate.py" not in item_path:
                if not self.should_ignore(item_path) and not self.should_not_modify(item):
                    relative_path = os.path.relpath(item_path, self.script_dir)
                    obfuscated_path = os.path.join(self.obfuscated_dir, relative_path)

                    os.makedirs(os.path.dirname(obfuscated_path), exist_ok=True)
                    obfuscate_file(item_path, 10)

    def rename_files(self, dir_path):
        for item in os.listdir(dir_path):
            item_path = os.path.join(dir_path, item)

            if os.path.isdir(item_path):
                self.rename_files(item_path)
            elif "obfuscated" in item:
                new_name = item.replace("-obfuscated", "")
                new_path = os.path.join(dir_path, new_name)
                os.rename(item_path, new_path)
                print(f"Renamed {item_path} to {new_path}")

    def perform_obfuscation(self):
        for root, dirs, files in os.walk(self.script_dir):
            if not any(self.should_ignore(name) for name in root.split(os.path.sep)):
                print(f"Entering folder: {root}")
                for filename in files:
                    filepath = os.path.join(root, filename)
                    if filepath.endswith(".py") and not self.should_not_modify(filename):
                        print(f"Modifying file {filepath}")
                        relative_path = os.path.relpath(filepath, self.script_dir)
                        obfuscated_path = os.path.join(self.obfuscated_dir, relative_path)

                        os.makedirs(os.path.dirname(obfuscated_path), exist_ok=True)
                        obfuscate_file(filepath, 10)
        self.rename_files(self.script_dir)

if __name__ == "__main__":
    obfuscation_manager = ObfuscationManager()
    obfuscation_manager.perform_obfuscation()
